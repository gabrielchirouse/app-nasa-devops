[{"/Users/local192/Documents/DWJSA/app-nasa/src/index.js":"1","/Users/local192/Documents/DWJSA/app-nasa/src/App.js":"2","/Users/local192/Documents/DWJSA/app-nasa/src/serviceWorker.js":"3","/Users/local192/Documents/DWJSA/app-nasa/src/app/store.js":"4","/Users/local192/Documents/DWJSA/app-nasa/src/features/nasa/nasaSlice.js":"5","/Users/local192/Documents/DWJSA/app-nasa/src/api/client.js":"6","/Users/local192/Documents/DWJSA/app-nasa/src/features/nasa/NasaInfo.js":"7","/Users/local192/Documents/DWJSA/app-nasa/src/features/nasa/NasaList.js":"8","/Users/local192/Documents/DWJSA/app-nasa/src/features/nasa/NasaCaroussel.js":"9","/Users/local192/Documents/DWJSA/app-nasa/src/features/nasa/NasaNavBar.js":"10","/Users/local192/Documents/DWJSA/app-nasa/src/features/nasa/NasaFavoris.js":"11","/Users/local192/Documents/DWJSA/app-nasa/src/features/nasa/NasaSearch.js":"12","/Users/local192/Documents/DWJSA/app-nasa/src/features/nasa/NasaHistorique.js":"13","/Users/local192/Documents/DWJSA/app-nasa-devops/src/index.js":"14","/Users/local192/Documents/DWJSA/app-nasa-devops/src/App.js":"15","/Users/local192/Documents/DWJSA/app-nasa-devops/src/serviceWorker.js":"16","/Users/local192/Documents/DWJSA/app-nasa-devops/src/app/store.js":"17","/Users/local192/Documents/DWJSA/app-nasa-devops/src/features/nasa/NavBar/NasaNavBar.js":"18","/Users/local192/Documents/DWJSA/app-nasa-devops/src/features/nasa/Slice/nasaSlice.js":"19","/Users/local192/Documents/DWJSA/app-nasa-devops/src/features/nasa/List/NasaList.js":"20","/Users/local192/Documents/DWJSA/app-nasa-devops/src/features/nasa/Caroussel/NasaCaroussel.js":"21","/Users/local192/Documents/DWJSA/app-nasa-devops/src/features/nasa/Favoris/NasaFavoris.js":"22","/Users/local192/Documents/DWJSA/app-nasa-devops/src/features/nasa/Search/NasaSearch.js":"23","/Users/local192/Documents/DWJSA/app-nasa-devops/src/features/nasa/Historique/NasaHistorique.js":"24","/Users/local192/Documents/DWJSA/app-nasa-devops/src/api/client.js":"25","/Users/local192/Documents/DWJSA/app-nasa-devops/src/features/nasa/Info/NasaInfo.js":"26"},{"size":692,"mtime":1610991194819,"results":"27","hashOfConfig":"28"},{"size":232,"mtime":1612191282309,"results":"29","hashOfConfig":"28"},{"size":5141,"mtime":1610378855978,"results":"30","hashOfConfig":"28"},{"size":191,"mtime":1610379664038,"results":"31","hashOfConfig":"28"},{"size":2764,"mtime":1614088403314,"results":"32","hashOfConfig":"28"},{"size":1071,"mtime":1610029178547,"results":"33","hashOfConfig":"28"},{"size":2986,"mtime":1614086360458,"results":"34","hashOfConfig":"28"},{"size":2217,"mtime":1614086360465,"results":"35","hashOfConfig":"28"},{"size":1927,"mtime":1614086360444,"results":"36","hashOfConfig":"28"},{"size":3004,"mtime":1614088202588,"results":"37","hashOfConfig":"28"},{"size":1612,"mtime":1614086360476,"results":"38","hashOfConfig":"28"},{"size":2847,"mtime":1614088202595,"results":"39","hashOfConfig":"28"},{"size":839,"mtime":1614086360480,"results":"40","hashOfConfig":"28"},{"size":692,"mtime":1614258024637,"results":"41","hashOfConfig":"42"},{"size":239,"mtime":1614887298661,"results":"43","hashOfConfig":"42"},{"size":5141,"mtime":1614258024638,"results":"44","hashOfConfig":"42"},{"size":197,"mtime":1614887298682,"results":"45","hashOfConfig":"42"},{"size":3050,"mtime":1614887298643,"results":"46","hashOfConfig":"42"},{"size":2771,"mtime":1614887298707,"results":"47","hashOfConfig":"42"},{"size":2245,"mtime":1614887298667,"results":"48","hashOfConfig":"42"},{"size":1942,"mtime":1614887298656,"results":"49","hashOfConfig":"42"},{"size":1625,"mtime":1614887298671,"results":"50","hashOfConfig":"42"},{"size":2841,"mtime":1614887298695,"results":"51","hashOfConfig":"42"},{"size":846,"mtime":1614887298685,"results":"52","hashOfConfig":"42"},{"size":1071,"mtime":1614258024638,"results":"53","hashOfConfig":"42"},{"size":2992,"mtime":1614887298676,"results":"54","hashOfConfig":"42"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},"1xes2i0",{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"57"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"57"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"57"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"nnit5f",{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/local192/Documents/DWJSA/app-nasa/src/index.js",[],["113","114"],"/Users/local192/Documents/DWJSA/app-nasa/src/App.js",[],"/Users/local192/Documents/DWJSA/app-nasa/src/serviceWorker.js",[],"/Users/local192/Documents/DWJSA/app-nasa/src/app/store.js",[],"/Users/local192/Documents/DWJSA/app-nasa/src/features/nasa/nasaSlice.js",["115","116"],"import {createAsyncThunk, createSlice} from '@reduxjs/toolkit'\nimport moment from 'moment'\nimport {client} from \"../../api/client\";\n\n\n// ---- variable initiale du slice\nconst initialState = {\n    results : [],\n    slider: [],\n    favoris: [],\n    query : {\n        camera: 'FHAZ',\n        rover: 'curiosity',\n        page: 1\n    },\n    historique:[],\n    status: 'idle',\n};\n// ----\n\n// ---- slider en fonction de la date d'aujourd'hui\nexport const querySlider = createAsyncThunk('documents/querySlider',\nasync () => {\n    const date = Date();\n    const response = await client.get('https://api.nasa.gov/mars-photos/api/v1/rovers/curiosity/photos?api_key=qrFZwKfJVze4cr7BlBaPyp85UwTan2HJRflJP0EK&earth_date=2020-01-01');\n    //const response = await client.get('https://api.nasa.gov/mars-photos/api/v1/rovers/curiosity/photos?api_key=qrFZwKfJVze4cr7BlBaPyp85UwTan2HJRflJP0EK&earth_date='+moment(date).format('YYYY-MM-DD'));\n    return response.photos;\n});\n// ----\n\n// ---- récupération de la recherche\nexport const queryIndex = createAsyncThunk('documents/queryIndex',\nasync query => {\n    const url = 'https://api.nasa.gov/mars-photos/api/v1/rovers/'+query.rover+'/photos?&sol=1000&api_key=qrFZwKfJVze4cr7BlBaPyp85UwTan2HJRflJP0EK&page='+query.page+'&camera='+query.camera;\n    const response = await client.get(url);\n    return {response:response.photos, query:query};\n});\n// ----\n\n// ---- Slice nasa\nconst nasaSlice = createSlice({\n    name: 'nasa',\n    initialState,\n    reducers:{\n        nasaFavoris(state, action){\n            state.favoris = action.payload.favoris;\n        },\n        nasaHistorique(state, action){\n            state.historique.push(action.payload.historique);\n        }\n    },\n    extraReducers: {\n        [queryIndex.rejected]: (state, action) => {\n            state.status = 'error';\n        },\n        [queryIndex.pending]: (state, action) => {\n            state.status = 'loading';\n        },\n        [queryIndex.fulfilled]: (state, action) => {\n            state.status = 'succeeded';\n            state.results = action.payload.response;\n            state.query = action.payload.query;\n        },\n        [querySlider.fulfilled]: (state, action) => {\n            state.slider = action.payload;\n        }\n    }\n})\n// ----\n\n// ---- export de toute les variables\nexport const { nasaFavoris, nasaHistorique } = nasaSlice.actions;\nexport const selectNasaFavoris = state => state.nasa.favoris;\nexport const selectNasaHistorique = state => state.nasa.historique;\nexport const selectNasaSlider = state => state.nasa.slider;\nexport const selectNasaResults = state => state.nasa.results;\nexport const selectNasaQuery = state => state.nasa.query;\nexport const stateQuery = state => state.nasa.status;\nexport default nasaSlice.reducer;\n// ----\n","/Users/local192/Documents/DWJSA/app-nasa/src/api/client.js",[],"/Users/local192/Documents/DWJSA/app-nasa/src/features/nasa/NasaInfo.js",["117","118"],"import React, {useEffect, useState} from \"react\";\nimport ReactCardFlip from 'react-card-flip';\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport * as IconRegular from \"@fortawesome/free-regular-svg-icons\";\nimport * as IconSolid from \"@fortawesome/fontawesome-free-solid\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {nasaFavoris, selectNasaFavoris} from \"./nasaSlice\";\n\n\nexport const NasaInfo = (props) => {\n\n    // ---- rcupération de la liste des favoris et du dispatch\n    const favoris = useSelector(selectNasaFavoris);\n    const dispatch = useDispatch();\n    // ----\n\n    // ---- ajout du mouvement de la carte pour les informations\n    const [isFLip, setFlip] = useState(false);\n    const handleFlip = () => {\n        setFlip(!isFLip);\n    };\n    // ----\n\n    // ---- ajoute de l'étoile si c'est un favoris\n    const [icon, setIcon] = useState(IconRegular.faStar);\n    const handleStar = (photo) => {\n        let newFavoris = favoris.map(favoris => favoris);\n        if (icon === IconSolid.faStar){\n            setIcon(IconRegular.faStar);\n            newFavoris = favoris.filter(favori => favori.id !== photo.id);\n        }else{\n            newFavoris.push(photo);\n            setIcon(IconSolid.faStar);\n        }\n        dispatch(\n            nasaFavoris({\n                favoris:newFavoris\n            })\n        );\n    };\n    // ----\n\n    // effectuer useEffect une seul fois grâce au []\n    useEffect(() => {\n        if (props.isFavoris !== true){\n            setIcon(IconRegular.faStar);\n        }else{\n            setIcon(IconSolid.faStar);\n        }\n    },[]);\n    // ----\n\n    return(\n        <div className=\"col-12 col-md-4 mt-3\">\n            <ReactCardFlip isFlipped={isFLip} flipDirection=\"vertical\" containerStyle={{height:\"100%\"}}>\n                <div className=\"card h-100\">\n                    <img onClick={()=> handleFlip()} src={props.photo?.img_src} className=\"card-img-top\" alt={props.photo?.camera.name}/>\n                    <div className=\"card-body d-flex flex-column justify-content-end\">\n                        <div>\n                            <h5 className=\"card-title\">{props.photo?.camera.name}</h5>\n                            <p>{props.photo?.camera.full_name}</p>\n                            <div onClick={()=>handleStar(props.photo)}>\n                                <FontAwesomeIcon icon={icon} className={\"text-dark\"}/>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"card\" onClick={()=> handleFlip()}>\n                    <div className=\"card-body\">\n                        <h5 className=\"card-title\">Rover {props.photo?.rover.name}</h5>\n                        <p>landing date: {props.photo?.rover.landing_date}</p>\n                        <p>launch date: {props.photo?.rover.launch_date}</p>\n\n                    </div>\n                </div>\n            </ReactCardFlip>\n        </div>\n    )\n}\n",["119","120"],"/Users/local192/Documents/DWJSA/app-nasa/src/features/nasa/NasaList.js",["121"],"import React, {useEffect} from \"react\";\nimport { useSelector } from \"react-redux\";\nimport {useDispatch} from \"react-redux\";\nimport {\n    queryIndex,\n    selectNasaFavoris,\n    selectNasaQuery,\n    selectNasaResults,\n} from \"./nasaSlice\";\nimport Pagination from \"react-js-pagination\";\nimport {NasaInfo} from \"./NasaInfo\";\n\nexport const NasaList = () => {\n    const photos = useSelector(selectNasaResults)\n    let favoris = useSelector(selectNasaFavoris)\n    const query = useSelector(selectNasaQuery)\n    const dispatch = useDispatch()\n    useEffect(() => {\n        dispatch(\n            queryIndex(query)\n        )\n    }, [])\n    const handlePageChange = (page) => {\n        const updateQuery = {\n            camera: query.camera,\n            rover: query.rover,\n            page:page\n        }\n        dispatch(\n            queryIndex(updateQuery)\n        )\n    }\n    const listRender = (\n        <div className={\"d-flex overflow-auto mb-5\"}>\n            {\n                photos.map(photo => {\n                    const isFavoris = favoris.map(item => item.id === photo.id).includes(true)\n                    return <NasaInfo photo={photo} isFavoris={isFavoris} key={photo.id}/>\n                } )\n            }\n        </div>\n    )\n\n    return(\n        <div className={\"col-12 mt-3\"}>\n            <div className={\"d-flex justify-content-center mt-3\"}>\n                <Pagination\n                    itemClass=\"page-item\"\n                    linkClass=\"page-link bg-dark text-white\"\n                    hideFirstLastPages\n                    prevPageText='prev'\n                    nextPageText='next'\n                    activePage={query.page}\n                    itemsCountPerPage={photos.length}\n                    totalItemsCount={3000}\n                    pageRangeDisplayed={5}\n                    onChange={handlePageChange.bind(this)}\n                />\n            </div>\n            {listRender}\n        </div>\n\n    )\n}\n","/Users/local192/Documents/DWJSA/app-nasa/src/features/nasa/NasaCaroussel.js",["122"],"import React, {useEffect} from \"react\";\nimport {querySlider, selectNasaSlider} from \"./nasaSlice\";\nimport {useDispatch, useSelector} from \"react-redux\";\n\nexport const NasaCaroussel = () => {\n\n    // ---- liste des photos et récupération du dispatch\n    const photos = useSelector(selectNasaSlider);\n    const dispatch = useDispatch();\n    // ----\n\n    // ---- effectuer useEffect une seul fois grâce au [] et appel de la query\n    useEffect(() => {\n        dispatch(\n            querySlider()\n        )\n    },[] )\n    // ----\n\n    // ---- mise en place des images du slider\n    let first = true\n    const renderedPhotos = photos.map(photo => {\n        let className = \"carousel-item\"\n        if (first) {\n            className+= \" active\"\n            first=!first\n        }\n        return (\n            <div className={className} key={photo.id}>\n                <img src={photo.img_src} className=\"d-block w-100 img-carousel border border-white rounded\" alt={photo.id}/>\n            </div>\n        )\n    })\n    // ----\n\n    return(\n        <div className={\"col-12 d-flex justify-content-center mt-3\"}>\n            <div id=\"carousel\" className=\"carousel carousel-dark slide w-100\" data-ride=\"carousel\">\n                <div className=\"carousel-inner\">\n                    {renderedPhotos}\n                </div>\n                <a className=\"carousel-control-prev\" href=\"#carousel\" role=\"button\" data-slide=\"prev\">\n                    <span className=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\n                    <span className=\"visually-hidden\">Back</span>\n                </a>\n                <a className=\"carousel-control-next\" href=\"#carousel\" role=\"button\" data-slide=\"next\">\n                    <span className=\"visually-hidden\">Next</span>\n                    <span className=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\n                </a>\n            </div>\n        </div>\n    )\n}\n\n\n","/Users/local192/Documents/DWJSA/app-nasa/src/features/nasa/NasaNavBar.js",[],"/Users/local192/Documents/DWJSA/app-nasa/src/features/nasa/NasaFavoris.js",[],"/Users/local192/Documents/DWJSA/app-nasa/src/features/nasa/NasaSearch.js",[],"/Users/local192/Documents/DWJSA/app-nasa/src/features/nasa/NasaHistorique.js",[],"/Users/local192/Documents/DWJSA/app-nasa-devops/src/index.js",[],"/Users/local192/Documents/DWJSA/app-nasa-devops/src/App.js",[],"/Users/local192/Documents/DWJSA/app-nasa-devops/src/serviceWorker.js",[],"/Users/local192/Documents/DWJSA/app-nasa-devops/src/app/store.js",[],"/Users/local192/Documents/DWJSA/app-nasa-devops/src/features/nasa/NavBar/NasaNavBar.js",[],"/Users/local192/Documents/DWJSA/app-nasa-devops/src/features/nasa/Slice/nasaSlice.js",[],"/Users/local192/Documents/DWJSA/app-nasa-devops/src/features/nasa/List/NasaList.js",[],"/Users/local192/Documents/DWJSA/app-nasa-devops/src/features/nasa/Caroussel/NasaCaroussel.js",[],"/Users/local192/Documents/DWJSA/app-nasa-devops/src/features/nasa/Favoris/NasaFavoris.js",[],"/Users/local192/Documents/DWJSA/app-nasa-devops/src/features/nasa/Search/NasaSearch.js",[],"/Users/local192/Documents/DWJSA/app-nasa-devops/src/features/nasa/Historique/NasaHistorique.js",[],"/Users/local192/Documents/DWJSA/app-nasa-devops/src/api/client.js",[],"/Users/local192/Documents/DWJSA/app-nasa-devops/src/features/nasa/Info/NasaInfo.js",[],{"ruleId":"123","replacedBy":"124"},{"ruleId":"125","replacedBy":"126"},{"ruleId":"127","severity":1,"message":"128","line":2,"column":8,"nodeType":"129","messageId":"130","endLine":2,"endColumn":14},{"ruleId":"127","severity":1,"message":"131","line":24,"column":11,"nodeType":"129","messageId":"130","endLine":24,"endColumn":15},{"ruleId":"132","severity":1,"message":"133","line":51,"column":7,"nodeType":"134","endLine":51,"endColumn":9,"suggestions":"135"},{"ruleId":"136","severity":1,"message":"137","line":58,"column":21,"nodeType":"138","endLine":58,"endColumn":138},{"ruleId":"123","replacedBy":"139"},{"ruleId":"125","replacedBy":"140"},{"ruleId":"132","severity":1,"message":"141","line":22,"column":8,"nodeType":"134","endLine":22,"endColumn":10,"suggestions":"142"},{"ruleId":"132","severity":1,"message":"143","line":14,"column":7,"nodeType":"134","endLine":14,"endColumn":9,"suggestions":"144"},"no-native-reassign",["145"],"no-negated-in-lhs",["146"],"no-unused-vars","'moment' is defined but never used.","Identifier","unusedVar","'date' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.isFavoris'. Either include it or remove the dependency array.","ArrayExpression",["147"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement",["145"],["146"],"React Hook useEffect has missing dependencies: 'dispatch' and 'query'. Either include them or remove the dependency array.",["148"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["149"],"no-global-assign","no-unsafe-negation",{"desc":"150","fix":"151"},{"desc":"152","fix":"153"},{"desc":"154","fix":"155"},"Update the dependencies array to be: [props.isFavoris]",{"range":"156","text":"157"},"Update the dependencies array to be: [dispatch, query]",{"range":"158","text":"159"},"Update the dependencies array to be: [dispatch]",{"range":"160","text":"161"},[1597,1599],"[props.isFavoris]",[622,624],"[dispatch, query]",[370,372],"[dispatch]"]